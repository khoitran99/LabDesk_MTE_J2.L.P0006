/**
 *Name : Tran Van Khoi
 *MSSV : HE130007
 *Email : khoitvhe130007@fpt.edu.vn
 *Lecturer : DuongTB
 */
package view;

import controller.FindController;
import controller.FontController;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.HeadlessException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author khoitvhe130007@fpt.edu.vn
 */
public class FontDialog extends javax.swing.JDialog {

    MainView mainView;
    FontController fontController;

    public FontDialog(java.awt.Frame parent) {
        initComponents();
        mainView = (MainView) parent;
        fontController = new FontController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFont = new javax.swing.JList<>();
        txtFont = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listFontStyle = new javax.swing.JList<>();
        txtFontStyle = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        listSize = new javax.swing.JList<>();
        txtSample = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Font:");

        listFont.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listFont.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listFontValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listFont);

        txtFont.setEditable(false);

        jLabel3.setText("Font style:");

        listFontStyle.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listFontStyle.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listFontStyleValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listFontStyle);

        txtFontStyle.setEditable(false);

        jLabel4.setText("Size");

        txtSize.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSizeCaretUpdate(evt);
            }
        });

        listSize.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listSizeMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(listSize);

        txtSample.setEditable(false);
        txtSample.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSample.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSample.setText("AaBbYyZz");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(116, 116, 116)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel4)
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(txtFont))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtSample, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                    .addComponent(txtFontStyle))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSize)
                                    .addComponent(jScrollPane3))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFontStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(txtSample, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listFontValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listFontValueChanged
        changeFont(mainView);
    }//GEN-LAST:event_listFontValueChanged

    private void listFontStyleValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listFontStyleValueChanged
        changeFontStyle(mainView);
    }//GEN-LAST:event_listFontStyleValueChanged

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        fontController.changeMainViewFont(listFont.getSelectedValue(), listFontStyle.getSelectedIndex()
                , txtSize.getText(), mainView, this);
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtSizeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSizeCaretUpdate
        int txtSizeValue = fontController.getTextSize(txtSize.getText(), this);
        if (txtSizeValue == -1) {
            return;
        }
        for (String size : fontController.getSizes()) {
            if (size.equals(String.valueOf(txtSizeValue))) {
                listSize.setSelectedValue(String.valueOf(txtSizeValue), true); // if input in size textfield has match value in listSize , the value in list size is selected
                break;
            } else {
                listSize.clearSelection();                                     // if input in size textfield does not match value in listSize , clear selection in list Size
            }
        }
        String currentFont = txtFont.getFont().getFontName();
        int currentStyle = txtFontStyle.getFont().getStyle();
        txtSample.setFont(new Font(currentFont, currentStyle, txtSizeValue));
    }//GEN-LAST:event_txtSizeCaretUpdate

    private void listSizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listSizeMousePressed
        changeSize(mainView);
    }//GEN-LAST:event_listSizeMousePressed

    /* initialize data to the dialog when user open font dialog */
    public void initFontData(MainView mainView) {
        /* set up data for listFontStyle , listSize, listFont */
        listFontStyle.setListData(fontController.getStyles());
        listSize.setListData(fontController.getSizes());
        listFont.setListData(fontController.getFonts());

        /* set up selected value for listFontStyle , listSize, listFont matching with mainView */
        String currentFont = mainView.getTxtArea().getFont().getFamily();
        int currentStyle = mainView.getTxtArea().getFont().getStyle();
        int currentSize = mainView.getTxtArea().getFont().getSize();

        listFont.setSelectedValue(currentFont, true);
        listFontStyle.setSelectedIndex(currentStyle);
        listSize.setSelectedValue(Integer.toString(currentSize), true);

        txtFont.setText(currentFont);
        txtFontStyle.setText(fontController.styleToString(currentStyle));
        txtSize.setText(Integer.toString(currentSize));
    }

    /* when user chooses value in listFont */
    public void changeFont(MainView mainView) {
        String selectedFont = listFont.getSelectedValue();
        int currentStyle = txtSample.getFont().getStyle();
        int currentSize = txtSample.getFont().getSize();
        txtFont.setText(selectedFont);
        txtSample.setFont(new Font(selectedFont, currentStyle, currentSize)); // change font in txtSample
    }

    /* when user chooses value in listFontStyle*/
    public void changeFontStyle(MainView mainView) {
        int selectedStyle = listFontStyle.getSelectedIndex();
        String currentFont = txtSample.getFont().getFontName();
        int currentSize = txtSample.getFont().getSize();
        txtFontStyle.setText(fontController.styleToString(selectedStyle));
        txtSample.setFont(new Font(currentFont, selectedStyle, currentSize));   // change font in txtSample
    }

    /* when user chooses value in listSize*/
    public void changeSize(MainView mainView) {
        String selectedSize = listSize.getSelectedValue();
        String currentFont = txtSample.getFont().getFontName();
        int currentStyle = txtSample.getFont().getStyle();
        txtSize.setText(selectedSize);
        txtSample.setFont(new Font(currentFont, currentStyle, Integer.parseInt(selectedSize))); // change font in txtSample
    }

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FontDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FontDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FontDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FontDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FontDialog dialog = new FontDialog(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listFont;
    private javax.swing.JList<String> listFontStyle;
    private javax.swing.JList<String> listSize;
    private javax.swing.JTextField txtFont;
    private javax.swing.JTextField txtFontStyle;
    private javax.swing.JTextField txtSample;
    private javax.swing.JTextField txtSize;
    // End of variables declaration//GEN-END:variables
}
